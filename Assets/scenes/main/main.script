local game_manager = require "assets/modules/game_manager"

local function make_it_harder(self)
    game_manager.hard = game_manager.hard + 1;
    msg.post(game_manager.catlaks[game_manager.hard], "enable")

    self.hard_timers[#self.hard_timers+1] = timer.delay(1, true, function ()
        game_manager.total_table[2] = game_manager.total_table[2] - 1

        if game_manager.total_table[2] == 0 then
            msg.post(".", "game_over")
            timer.cancel(self.game_timer)
            for index, value in ipairs(self.hard_timers) do
                timer.cancel(value)
            end
            self.hard_timers = {}
        end
    end)
end

function init(self)
    msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })
    defos.set_cursor_visible(false)

	self.state = "MAIN_MENU"
    self.hard_timers = {}
end

function on_message(self, message_id, message, sender)
	if message_id == hash("start_main_menu") then
        msg.post("#game_over", "unload")
        msg.post("#main_menu", "enable")
		msg.post("/cursor", "enable")
		
	elseif message_id == hash("start_game") then
		msg.post("#game_level_proxy", "load")

		msg.post("#main_menu", "disable")
		msg.post("/cursor", "disable")

        self.game_timer = timer.delay(10, true, make_it_harder)
		
	elseif message_id == hash("game_over") then
        msg.post("#game_level_proxy", "unload")
		msg.post("#game_over", "load")
        game_manager.game_over()

    elseif message_id == hash("try_again") then
		msg.post(".", "start_main_menu")
		
	elseif message_id == hash("proxy_loaded") then
        msg.post(sender, "enable")
	end
end